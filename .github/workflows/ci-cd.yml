name: cicd

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  NEW_RELIC_API_KEY: ${{ secrets.NEW_RELIC_API_KEY }}

jobs:
  build-and-run-tests:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x, 16.x, 18.x]

    outputs:
      jest-result: ${{ steps.jest-test.outputs.test_result }}
      newrelic-result: ${{ steps.newrelic.outputs.newrelic_result }}

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - name: Install dependencies
      run: npm ci
    - name: Run jest test
      id: jest-test
      run: |
        if npm test ; then
          echo "Test passed"
          echo "test_result=success" >> "$GITHUB_OUTPUT"
        else
          echo "Test failed"
          echo "test_result=failed" >> "$GITHUB_OUTPUT"
          exit 1
        fi

    # validate no open alerts in NR for this service
    - name: New Relic Health Check
      id: newrelic
      run: |
        GQL_ENDPOINT="https://api.newrelic.com/graphql"

        response=$(curl -sS ${GQL_ENDPOINT} \
          -H 'Content-Type: application/json' \
          -H 'API-Key: '${NEW_RELIC_API_KEY} \
          --data-binary '{"query":"{\n  actor {\n    entitySearch(\n      query: \"domain=\u0027AIOPS\u0027 and type=\u0027ISSUE\u0027 and tags.relatedEntityName=\u0027Node-Express-Example\u0027\"\n    ) {\n      count\n    }\n  }\n}", "variables":""}')


        result=$( jq -r '.data.actor.entitySearch.count' <<< "${response}")

        if [ $? -eq 0 ]; then
          echo "GraphQL call Successful."
          echo "Issue Count: "$result
          if [ "$result" -eq "0" ]; then
            echo "newrelic_result=success" >> "$GITHUB_OUTPUT"
          else
            #echo "Issue Count > 0...blocking deployment."
            echo "newrelic_result=failed" >> "$GITHUB_OUTPUT"
            exit 1
          fi
        else
          echo "GraphQL call Failed."
          exit 1
        fi


  deploy:
    runs-on: ubuntu-latest
    needs: build-and-run-tests
    if: ${{ (needs.build-and-run-tests.outputs.jest-result == 'success') && (needs.build-and-run-tests.outputs.newrelic-result == 'success') }}

    steps:
    - name: Set Release Version
      run: echo "RELEASE_VERSION=${{ github.ref_name }}" >> $GITHUB_ENV
    - name: Deploy To AWS
      run: echo "Placeholder steps.."
    # This step creates a new Change Tracking Marker
    - name: New Relic Application Deployment Marker
      uses: newrelic/deployment-marker-action@v2.2.0
      with:
        apiKey: ${{ secrets.NEW_RELIC_API_KEY }}
        region: "US"
        guid: ${{ secrets.NEW_RELIC_DEPLOYMENT_ENTITY_GUID }}
        version: "${{ env.RELEASE_VERSION }}"
        user: "${{ github.actor }}"
        description: "Automated deploy via GH Actions"
